#!/usr/bin/env node

module.exports = buildjs

var fs = require('fs')
var dz = require('dezalgo')
var concat = require('concat-stream')
var uglify = require('uglify-js')
var browserify = require('browserify')

var ismain = !module.parent

if (ismain) {
  buildjs(function (err) {
    if (err) throw err

    console.log('javascript built successfully')
  })
}

function buildjs (cb) {
  cb = dz(cb)

  var b = browserify()
  b.add(__dirname + '/../index.js')
  b.transform('txtify2', { extensions: [ 'html' ] })
  b.transform('envify')
  b.transform('browserify-versionify')

  b.bundle()
    .on('error', function (err) {
      // stock browserify errors include a stream ref that is a bit too noisy for logging
      cb(new Error('error building javascript: ' + err.message))
    })
    .pipe(concat(function (data) {

      if (process.env.NODE_ENV === 'production') {
        data = uglify.minify(data.toString(), { fromString: true }).code
      }

      fs.writeFile(__dirname + '/../share/build.js', data, cb)
    }))
}
